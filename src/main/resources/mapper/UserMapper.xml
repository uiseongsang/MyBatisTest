<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.test.mapper.UserMapper">
    <resultMap id="UserResultMap" type="org.example.test.entity.User">
        <!-- 각 컬럼에 맞게 매핑 설정 -->
        <id column="id" property="id" jdbcType="BIGINT" javaType="Long"/>
        <result column="username" property="username" jdbcType="VARCHAR" javaType="String"/>
        <result column="email" property="email" jdbcType="VARCHAR" javaType="String"/>
        <result column="createdAt" property="createdAt" jdbcType="TIMESTAMP"/>
        <!-- ... 다른 필드들에 대한 매핑 ... -->
        <!-- Many-to-One mapping -->
        <association property="user" javaType="org.example.test.entity.User">
            <id column="user_id" property="user_id" jdbcType="BIGINT"/>
            <result column="username" property="username" jdbcType="VARCHAR"/>
            <result column="email" property="email" jdbcType="VARCHAR"/>
            <result column="createdAt" property="createdAt" jdbcType="TIMESTAMP"/>
        </association>

        <!-- Map the One-to-Many relationship with the Board entity -->
<!--        <collection property="boardList" ofType="org.example.test.entity.Board">-->
<!--            <id column="board_id" property="board_id" jdbcType="BIGINT"/>-->
<!--            <result column="title" property="title" jdbcType="VARCHAR"/>-->
<!--            <result column="content" property="content" jdbcType="VARCHAR"/>-->
<!--            <result column="createdAt" property="createdAt" jdbcType="TIMESTAMP"/>-->
<!--        </collection>-->
    </resultMap>

    <resultMap id="BoardResultMap" type="org.example.test.entity.Board">
        <!-- 각 컬럼에 맞게 매핑 설정 -->
        <id column="id" property="id" jdbcType="BIGINT" javaType="Long"/>
        <result column="title" property="title" jdbcType="VARCHAR" javaType="String"/>
        <result column="content" property="content" jdbcType="VARCHAR" javaType="String"/>
        <result column="createdAt" property="createdAt" jdbcType="TIMESTAMP"/>

    </resultMap>

    <select id="findAllByOrderByCreatedAtDesc" resultType="org.example.test.entity.User">
        SELECT * FROM member Order By createdAt DESC
    </select>

<!--    <select id="findBoardsByUserId" parameterType="user_id" resultType="org.example.test.entity.Board">-->
<!--        SELECT board.*-->
<!--        FROM board-->
<!--                 JOIN member ON board.user_id = member.user_id-->
<!--        WHERE member.user_id = #{user_id}-->
<!--        ORDER BY board.createdAt DESC;-->
<!--    </select>-->

    <insert id="insertUser" parameterType="org.example.test.entity.User">
        INSERT INTO member (username, email, <include refid="timestampedColumns"/>)
        VALUES (#{username}, #{email}, <include refid="timestampedValues"/>)
    </insert>


    <!-- ... 나머지 코드 ... -->

    <sql id="timestampedColumns">
        createdAt
        <!-- , modified_at -->
    </sql>

    <sql id="timestampedValues">
        #{createdAt, jdbcType=TIMESTAMP}
        <!-- , #{modifiedAt, jdbcType=TIMESTAMP} -->
    </sql>
</mapper>

